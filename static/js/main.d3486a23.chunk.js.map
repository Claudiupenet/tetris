{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["shapes","x","y","initialState","active","JSON","parse","stringify","Math","floor","random","length","position","blocked","isRunning","level","streak","Tetris","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","move","state","map","cell","isBlocked","checkIfBlocked","xIsZero","checkEndGame","endGame","concat","toConsumableArray","evaluateBlocked","reevaluate","setActive","setState","splice","some","blockedCell","newBlocked","index","reduce","acc","push","remainings","processLevel","element","filter","rows","adjustment","clearInterval","timer","setInterval","changeActive","e","button","arguments","undefined","console","log","key","changePosition","direction","block","indexLength","activeShape","isOutOfRange","shape","getCellType","isActive","startGame","restart","document","getElementById","style","display","objectSpread","area","Array","fill","timer2","addEventListener","_this2","react_default","a","createElement","id","onClick","className","linie","indexX","coloana","indexY","toString","window","orientation","navigator","userAgent","indexOf","onMouseDown","onTouchStart","onTouchEnd","React","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3486a23.chunk.js","sourcesContent":["import React from 'react';\n\nimport './App.css';\n\nconst shapes = [  [ [{x: 0, y: 6}, {x: 0, y: 5}, {x: 1, y: 5}, {x: 2, y: 5}],\n                    [{x: 1, y: 6}, {x: 0, y: 6}, {x: 0, y: 5}, {x: 0, y: 4}],\n                    [{x: 2, y: 5}, {x: 2, y: 6}, {x: 1, y: 6}, {x: 0, y: 6}],\n                    [{x: 0, y: 4}, {x: 1, y: 4}, {x: 1, y: 5}, {x: 1, y: 6}] ], // right T\n                  \n                  [ [{x: 0, y: 5}, {x: 0, y: 6}, {x: 1, y: 6}, {x: 2, y: 6}],\n                    [{x: 0, y: 6}, {x: 1, y: 6}, {x: 1, y: 5}, {x: 1, y: 4}],\n                    [{x: 2, y: 6}, {x: 2, y: 5}, {x: 1, y: 5}, {x: 0, y: 5}],\n                    [{x: 1, y: 4}, {x: 0, y: 4}, {x: 0, y: 5}, {x: 0, y: 6}] ], // left T\n\n                  [ [{x: 0, y: 6}, {x: 1, y: 6}, {x: 1, y: 5}, {x: 2, y: 5}],\n                    [{x: 0, y: 4}, {x: 0, y: 5}, {x: 1, y: 5}, {x: 1, y: 6}] ], // reverse S\n\n                  [ [{x: 0, y: 5}, {x: 1, y: 5}, {x: 1, y: 6}, {x: 2, y: 6}],\n                    [{x: 0, y: 6}, {x: 0, y: 5}, {x: 1, y: 5}, {x: 1, y: 4}] ], // S\n\n                  [ [{x: 0, y: 4}, {x: 0, y: 5}, {x: 0, y: 6}, {x: 0, y: 7}],\n                    [{x: 0, y: 5}, {x: 1, y: 5}, {x: 2, y: 5}, {x: 3, y: 5}] ], // linie\n\n                  [ [{x: 0, y: 5}, {x: 0, y: 6}, {x: 1, y: 5}, {x: 1, y: 6}] ], // patrat\n\n                  [ [{x: 0, y: 5}, {x: 1, y: 4}, {x: 1, y: 5}, {x: 1, y: 6}],\n                    [{x: 1, y: 6}, {x: 0, y: 5}, {x: 1, y: 5}, {x: 2, y: 5}],\n                    [{x: 1, y: 5}, {x: 0, y: 4}, {x: 0, y: 5}, {x: 0, y: 6}],\n                    [{x: 1, y: 4}, {x: 0, y: 5}, {x: 1, y: 5}, {x: 2, y: 5}] ] // 3\n                ];\n\nconst activeShape = JSON.parse(JSON.stringify(shapes[Math.floor(Math.random() * shapes.length)]));\n\nconst initialState = {\n  active: activeShape,\n  position: 0,\n  blocked: [],\n  isRunning: false,\n  level: 1,\n  streak: 0\n}\n\nclass Tetris extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n    ...initialState\n    }\n    this.timer = null;\n    this.timer2 = null;\n    this.reevaluate = false;\n  }\n  \n  componentDidMount(){\n    document.addEventListener(\"keydown\", this.changeActive);\n  }\n\n  move = () => {\n    if(this.state.isRunning) {\n      const active = JSON.parse(JSON.stringify(this.state.active));\n      active.map(position => position.map( cell => cell.x++));\n      const isBlocked = this.checkIfBlocked(active[this.state.position], this.state.blocked);\n      const xIsZero = this.checkEndGame(active[this.state.position]);\n      if(isBlocked && xIsZero) this.endGame();\n        else if(isBlocked) {\n        var blocked = [...this.state.blocked, ...this.state.active[this.state.position]];\n        blocked = this.evaluateBlocked(blocked);\n        if(this.reevaluate) {\n          this.setActive(7);\n          this.setState({blocked});\n          return;\n        } else {\n          shapes.splice(7, 1);\n          this.setActive();\n        }\n          this.setState({blocked});\n      } else \n        this.setState({active})\n    }\n  }\n\n  checkIfBlocked = (active, blocked) => {\n    return active.some(cell => {\n      const x = blocked.some(blockedCell => {\n        return blockedCell.x === cell.x && blockedCell.y === cell.y;\n      })\n      if(x || cell.x === 25) return true;\n      else return false;\n    });\n  }\n\n  evaluateBlocked = (blocked) => {\n    var newBlocked = JSON.parse(JSON.stringify(blocked));\n    var index = [];\n    blocked.reduce((acc, cell) => {\n      if (acc[cell.x] && acc[cell.x].length === 11) index.push(cell.x);\n      else if (acc[cell.x]) acc[cell.x].push(cell.y);\n      else acc[cell.x] = [cell.y]\n      return acc;\n    }, {})\n    var remainings = [];\n    if(index.length > 0) {\n      this.processLevel(index.length);\n      index.map(element => {\n        return(\n          newBlocked = newBlocked.filter(cell => {\n            if(cell.x < element) remainings.push(cell);\n            return (cell.x !== element && cell.x > element)\n          })\n        );\n      })\n      this.reevaluate = true;\n      shapes[7] = [remainings];\n    } else if (this.reevaluate) this.reevaluate = false;\n\n    return newBlocked;\n  }\n\n  processLevel = (rows) => {\n    if (this.state.level === 10) return;\n    let adjustment = null;\n    rows === 1 ? adjustment = 1 : (rows === 2 ? adjustment = 3 : (rows === 3 ? adjustment = 5 : adjustment = 7));\n    var streak = this.state.streak + adjustment;\n    var level = this.state.level;\n    if (streak > 9 && level > 8) {\n      streak = 20;\n      level = 10;\n    } else if (streak > 9) {\n      streak = streak % 10;\n      level++;\n      }\n\n    if (this.state.level !== level) {\n      clearInterval(this.timer);\n      this.timer = setInterval(this.move, (11 - level) * 30);\n      this.setState({streak, level})\n    } else this.setState({streak})\n  }\n\n  checkEndGame = active => {\n    return active.some(cell => cell.x === 1)\n  }\n\n  changeActive = (e, button = null) => {\n    console.log('changeactive')\n    if (!this.state.isRunning) return;\n    if(e.key === \"w\" || e.key === \"ArrowUp\" || button === 'rotate') this.changePosition();\n    var direction = null;\n    if(e.key === \"a\" || e.key === \"ArrowLeft\" || button === 'left') {\n      direction = -1;\n    } else if (e.key === \"d\" || e.key === \"ArrowRight\" || button === 'right') {\n      direction = 1; \n    } else if(e.key === \"s\" || e.key === \"ArrowDown\" || button === 'down'){\n      direction = 0;\n    } else return;\n  \n    const active = JSON.parse(JSON.stringify(this.state.active));\n    active.map(position => position.map(cell => {\n                                                  if(direction === 0) cell.x++;\n                                                  else cell.y = cell.y + direction\n                                                  return cell;\n                                                  }))\n    const block = active[this.state.position].some( cell => (cell.y === -1) || \n                                                            (cell.y === 12) ||\n                                                            (cell.x === 25) ||\n                                                            (this.state.blocked.some( block => (block.y === cell.y) && (block.x === cell.x))));\n    if(block) return;\n    else { \n      this.setState({active})\n    }\n  }\n\n  changePosition = () => {\n    const indexLength = this.state.active.length -1;\n    var position = this.state.position;\n    if (indexLength > this.state.position) position++;\n    else position = 0;\n    var activeShape = JSON.parse(JSON.stringify(this.state.active));\n    var isOutOfRange = false;\n    activeShape = activeShape.map(position => {\n      position.map(cell => {\n        if(cell.y < 0) {\n          position.map(cell => cell.y++); \n          isOutOfRange = true;\n        } else if (cell.y > 11) {\n          position.map(cell=> cell.y--)\n          isOutOfRange = true;\n        }\n        return cell;\n      })\n      return position;\n    })\n    if(isOutOfRange) this.setState({active: activeShape, position});\n    else this.setState({position})\n  }\n\n  setActive = (shape = null) => {\n    if(shape === null) {\n      const active = shapes[Math.floor(Math.random() * shapes.length)];\n      this.setState({active, position: 0})\n    } else this.setState({active: shapes[shape], position: 0})\n  }\n\n  getCellType = (x, y) => {\n    const isActive = this.state.active[this.state.position].some( cell => cell.x === x && cell.y === y);\n    const isBlocked = this.state.blocked.some( cell => cell.x === x && cell.y === y);\n    if (isActive) return \"active\";\n      else if (isBlocked) return \"blocked\";\n      else return \"empty\"\n  }\n  \n  startGame = () => {\n    if (this.state.isRunning) {\n      clearInterval(this.timer)\n      this.setState({isRunning: false})\n    } else {\n      this.timer = setInterval(this.move, (11 - this.state.level) *30);\n      this.setState({ isRunning: true })\n    }\n  }\n\n  restart = () => {\n    clearInterval(this.timer);\n    this.timer = setInterval(this.move, (11 - initialState.level) * 30);\n    document.getElementById(\"lostMessage\").style.display = \"none\";\n    this.setState({\n      ...initialState,\n      isRunning: true\n    })\n  }\n\n  endGame = () => {\n    this.setState({ isRunning: false });\n    document.getElementById(\"lostMessage\").style.display = \"block\";\n    clearInterval(this.timer)\n  }\n\n  area = Array(25).fill(Array(12).fill(null));\n\n  render() {\n    return (\n      <div id=\"wrapper\">\n        <div id=\"lostMessage\">\n          You lost. Click restart to play again!\n          <button onClick={() => this.restart()}>Restart</button>\n        </div>\n        <div className=\"area\">\n          {\n            this.area.map((linie, indexX) => {\n              return(\n                <div className=\"linie\" key={indexX}>\n                  {\n                    linie.map((coloana, indexY) => {\n                      return(\n                        <div className={this.getCellType(indexX, indexY)} key={indexX.toString() + ' ' + indexY.toString()}></div>\n                      );\n                    })\n                  }\n                </div>\n              );\n            })\n          }\n        </div>\n        <div id=\"info\">\n          <span id=\"level\">\n            Level: {this.state.level < 10 ? this.state.level : \"Max (10)\"}\n          </span>\n          <span id=\"streak\">\n            Streak: {this.state.level < 10 ? this.state.streak :  \"Max\" }\n          </span>\n          <button id=\"startButton\" onClick={() => this.startGame()}>\n            {this.state.isRunning ? \"Pause\" : \"Start\"}\n          </button>\n          {((typeof window.orientation !== \"undefined\") || (navigator.userAgent.indexOf('IEMobile') !== -1)) && <div id=\"controls\">\n            <button className=\"displayBlockButton\" onMouseDown={ (e)=> setInterval(this.changeActive(e,'rotate'), 30)}>\t&#9850;</button>\n            <button onTouchStart={(e) =>{this.timer2 = setInterval(() => this.changeActive(e, 'left'), 100); this.changeActive(e, 'left')}}  onTouchEnd={ () => clearInterval(this.timer2)} >&larr;</button>\n            <button onTouchStart={(e) =>{this.timer2 = setInterval(() => this.changeActive(e, 'right'), 100); this.changeActive(e, 'right')}} onTouchEnd={ () => clearInterval(this.timer2)}>&rarr;</button>\n            <button className=\"displayBlockButton\" onTouchStart={(e) => this.timer2 = setInterval(() => this.changeActive(e, 'down'), 100)} onTouchEnd={ () => clearInterval(this.timer2)} >&darr;</button>\n          </div>}\n        </div>\n      </div>\n    );\n  }\n  \n}\n\nexport default Tetris;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Tetris from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Tetris />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}